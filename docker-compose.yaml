version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5431:5432"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  airflow:
    image: apache/airflow:2.5.1
    environment:
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    volumes:
      - ./src/airflow/dags:/opt/airflow/dags
      - ./src/airflow/plugins:/opt/airflow/plugins
      - ./src/airflow/logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username airflow --password airflow --firstname Aude --lastname Fornel --role Admin --email audedefornel@gmail.com && airflow webserver"

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.0.1
    environment:
      GUNICORN_CMD_ARGS: "--timeout 60"
      MLFLOW_TRACKING_URI: "http://mlflow:5001"
    ports:
      - "5001:5000"
    command: mlflow server --host 0.0.0.0 --port 5001

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data

  api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    environment:
      - MODEL_PATH=/app/model.pth
    volumes:
      - ./src/api:/app

  webapp:
    build:
      context: ./src/webapp
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    volumes:
      - ./src/webapp:/app

volumes:
  postgres_data:
  minio_data:
